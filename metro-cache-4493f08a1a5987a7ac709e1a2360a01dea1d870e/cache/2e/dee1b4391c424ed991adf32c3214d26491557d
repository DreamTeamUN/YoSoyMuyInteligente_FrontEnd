__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.editBirthdate = exports.editPassword = exports.editFullname = undefined;

    var _this = this;

    var _react = _require(_dependencyMap[0], "react");

    var _react2 = _interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1], "react-native");

    var _const = _require(_dependencyMap[2], "../config/const");

    var _home = _require(_dependencyMap[3], "./home");

    var _logIn = _require(_dependencyMap[4], "./logIn");

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    var editData = function editData(body) {
        var ID, API_USERS_PUT, response;
        return regeneratorRuntime.async(function editData$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        _context.prev = 0;
                        _context.next = 3;
                        return regeneratorRuntime.awrap((0, _home.getID)());

                    case 3:
                        ID = _context.sent;
                        API_USERS_PUT = _const.API_USERS + "/" + ID;
                        _context.t0 = regeneratorRuntime;
                        _context.t1 = fetch;
                        _context.t2 = API_USERS_PUT;
                        _context.t3 = Headers;
                        _context.next = 11;
                        return regeneratorRuntime.awrap((0, _logIn.getToken)());

                    case 11:
                        _context.t4 = _context.sent;
                        _context.t5 = 'Bearer ' + _context.t4;
                        _context.t6 = {
                            "Authorization": _context.t5,
                            'Content-Type': 'application/json'
                        };
                        _context.t7 = new _context.t3(_context.t6);
                        _context.t8 = body;
                        _context.t9 = {
                            method: 'PUT',
                            headers: _context.t7,
                            body: _context.t8
                        };
                        _context.t10 = (0, _context.t1)(_context.t2, _context.t9);
                        _context.next = 20;
                        return _context.t0.awrap.call(_context.t0, _context.t10);

                    case 20:
                        response = _context.sent;
                        _context.next = 26;
                        break;

                    case 23:
                        _context.prev = 23;
                        _context.t11 = _context["catch"](0);
                        console.log("editData | Something went wrong");

                    case 26:
                    case "end":
                        return _context.stop();
                }
            }
        }, null, _this, [[0, 23]]);
    };

    var editFullname = exports.editFullname = function editFullname(fullname) {
        var body;
        return regeneratorRuntime.async(function editFullname$(_context2) {
            while (1) {
                switch (_context2.prev = _context2.next) {
                    case 0:
                        body = JSON.stringify({
                            "usuario": {
                                "nombre": fullname
                            }
                        });
                        editData(body);

                    case 2:
                    case "end":
                        return _context2.stop();
                }
            }
        }, null, _this);
    };

    var editPassword = exports.editPassword = function editPassword(password) {
        var body;
        return regeneratorRuntime.async(function editPassword$(_context3) {
            while (1) {
                switch (_context3.prev = _context3.next) {
                    case 0:
                        body = JSON.stringify({
                            "usuario": {
                                "password": password
                            }
                        });
                        editData(body);

                    case 2:
                    case "end":
                        return _context3.stop();
                }
            }
        }, null, _this);
    };

    var editBirthdate = exports.editBirthdate = function editBirthdate(birthdate) {
        var body;
        return regeneratorRuntime.async(function editBirthdate$(_context4) {
            while (1) {
                switch (_context4.prev = _context4.next) {
                    case 0:
                        body = JSON.stringify({
                            "usuario": {
                                "fecha_nacimiento": birthdate
                            }
                        });
                        editData(body);

                    case 2:
                    case "end":
                        return _context4.stop();
                }
            }
        }, null, _this);
    };
});