__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.getID_TUTOR = exports.SAVE_ID_TUTOR = exports.CREATE_STUDENT = undefined;

    var _this = this;

    var _const = _require(_dependencyMap[0], "../config/const");

    var _reactNative = _require(_dependencyMap[1], "react-native");

    var ID_TUTOR = 'id_tutor';

    var storeUserData = function storeUserData(id_tutor) {
        return regeneratorRuntime.async(function storeUserData$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        try {
                            _reactNative.AsyncStorage.setItem(ID_TUTOR, id_tutor.toString());
                        } catch (error) {
                            console.log("storeUserData | Something went wrong");
                        }

                    case 1:
                    case "end":
                        return _context.stop();
                }
            }
        }, null, _this);
    };

    var CREATE_STUDENT = exports.CREATE_STUDENT = function CREATE_STUDENT(idUser, nombre, fechaNacimiento) {
        var idTutor, URL;
        return regeneratorRuntime.async(function CREATE_STUDENT$(_context2) {
            while (1) {
                switch (_context2.prev = _context2.next) {
                    case 0:
                        _context2.next = 2;
                        return regeneratorRuntime.awrap(getID_TUTOR(idUser));

                    case 2:
                        idTutor = _context2.sent;
                        URL = _const.API_TUTORS.concat('/' + idTutor).concat("/estudiantes");
                        return _context2.abrupt("return", fetch(URL, {
                            method: 'POST',
                            headers: {
                                'Accept': 'application/json',
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                "nombre": nombre,
                                "fecha_nacimiento": fechaNacimiento
                            })
                        }));

                    case 5:
                    case "end":
                        return _context2.stop();
                }
            }
        }, null, _this);
    };

    var SAVE_ID_TUTOR = exports.SAVE_ID_TUTOR = function SAVE_ID_TUTOR(id_user) {
        var response, responseJson, tutores, id;
        return regeneratorRuntime.async(function SAVE_ID_TUTOR$(_context3) {
            while (1) {
                switch (_context3.prev = _context3.next) {
                    case 0:
                        _context3.prev = 0;
                        _context3.next = 3;
                        return regeneratorRuntime.awrap(fetch(_const.API_TUTORS));

                    case 3:
                        response = _context3.sent;
                        _context3.next = 6;
                        return regeneratorRuntime.awrap(response.json());

                    case 6:
                        responseJson = _context3.sent;
                        tutores = responseJson;
                        i = 0;

                    case 9:
                        if (!(i < tutores.length)) {
                            _context3.next = 18;
                            break;
                        }

                        id = tutores[i].usuario_id;

                        if (!(id_user == id)) {
                            _context3.next = 15;
                            break;
                        }

                        _context3.next = 14;
                        return regeneratorRuntime.awrap(storeUserData(tutores[i].id));

                    case 14:
                        return _context3.abrupt("return", responseJson);

                    case 15:
                        i++;
                        _context3.next = 9;
                        break;

                    case 18:
                        _context3.next = 24;
                        break;

                    case 20:
                        _context3.prev = 20;
                        _context3.t0 = _context3["catch"](0);
                        console.error(_context3.t0);
                        return _context3.abrupt("return", -1);

                    case 24:
                    case "end":
                        return _context3.stop();
                }
            }
        }, null, _this, [[0, 20]]);
    };

    var getID_TUTOR = exports.getID_TUTOR = function getID_TUTOR(id_user) {
        var id_tutor;
        return regeneratorRuntime.async(function getID_TUTOR$(_context4) {
            while (1) {
                switch (_context4.prev = _context4.next) {
                    case 0:
                        _context4.next = 2;
                        return regeneratorRuntime.awrap(SAVE_ID_TUTOR(id_user));

                    case 2:
                        _context4.prev = 2;
                        _context4.next = 5;
                        return regeneratorRuntime.awrap(_reactNative.AsyncStorage.getItem(ID_TUTOR));

                    case 5:
                        id_tutor = _context4.sent;
                        return _context4.abrupt("return", id_tutor);

                    case 9:
                        _context4.prev = 9;
                        _context4.t0 = _context4["catch"](2);
                        console.log("getID_TUTOR | Something went wrong");

                    case 12:
                    case "end":
                        return _context4.stop();
                }
            }
        }, null, _this, [[2, 9]]);
    };
});