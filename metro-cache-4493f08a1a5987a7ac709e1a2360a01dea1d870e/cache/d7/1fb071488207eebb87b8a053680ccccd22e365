__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.getTipoUsuario = exports.getID = exports.getUsername = exports.setUserData = undefined;

    var _this = this;

    var _react = _require(_dependencyMap[0], "react");

    var _react2 = _interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1], "react-native");

    var _const = _require(_dependencyMap[2], "../config/const");

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    var ID = 'id';
    var USERNAME = 'user';
    var TIPO_USUARIO = 'tipo_usuario_id';

    var storeUserData = function storeUserData(id, username, tipo_usuario_id) {
        return regeneratorRuntime.async(function storeUserData$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        try {
                            _reactNative.AsyncStorage.setItem(ID, id.toString());

                            _reactNative.AsyncStorage.setItem(USERNAME, username);

                            _reactNative.AsyncStorage.setItem(TIPO_USUARIO, tipo_usuario_id.toString());
                        } catch (error) {
                            console.log("storeUserData | Something went wrong");
                        }

                    case 1:
                    case "end":
                        return _context.stop();
                }
            }
        }, null, _this);
    };

    var setUserData = exports.setUserData = function setUserData(token) {
        var response, res;
        return regeneratorRuntime.async(function setUserData$(_context2) {
            while (1) {
                switch (_context2.prev = _context2.next) {
                    case 0:
                        _context2.prev = 0;
                        _context2.next = 3;
                        return regeneratorRuntime.awrap(fetch(_const.API_USERS, {
                            method: 'GET',
                            headers: new Headers({
                                "Authorization": 'Bearer ' + token
                            })
                        }));

                    case 3:
                        response = _context2.sent;
                        _context2.next = 6;
                        return regeneratorRuntime.awrap(response.json());

                    case 6:
                        res = _context2.sent;
                        storeUserData(res.id, res.user, res.tipo_usuario_id);
                        return _context2.abrupt("return", response);

                    case 11:
                        _context2.prev = 11;
                        _context2.t0 = _context2["catch"](0);
                        console.log("setUserData | Something went wrong");

                    case 14:
                    case "end":
                        return _context2.stop();
                }
            }
        }, null, _this, [[0, 11]]);
    };

    var getUsername = exports.getUsername = function getUsername() {
        var username;
        return regeneratorRuntime.async(function getUsername$(_context3) {
            while (1) {
                switch (_context3.prev = _context3.next) {
                    case 0:
                        _context3.prev = 0;
                        _context3.next = 3;
                        return regeneratorRuntime.awrap(_reactNative.AsyncStorage.getItem(USERNAME));

                    case 3:
                        username = _context3.sent;
                        console.log("getUsername | Username is: " + username);
                        return _context3.abrupt("return", username);

                    case 8:
                        _context3.prev = 8;
                        _context3.t0 = _context3["catch"](0);
                        console.log("getUsername | Something went wrong");

                    case 11:
                    case "end":
                        return _context3.stop();
                }
            }
        }, null, _this, [[0, 8]]);
    };

    var getID = exports.getID = function getID() {
        var id;
        return regeneratorRuntime.async(function getID$(_context4) {
            while (1) {
                switch (_context4.prev = _context4.next) {
                    case 0:
                        _context4.prev = 0;
                        _context4.next = 3;
                        return regeneratorRuntime.awrap(_reactNative.AsyncStorage.getItem(ID));

                    case 3:
                        id = _context4.sent;
                        console.log("getID | ID is: " + id);
                        return _context4.abrupt("return", id);

                    case 8:
                        _context4.prev = 8;
                        _context4.t0 = _context4["catch"](0);
                        console.log("getID | Something went wrong");

                    case 11:
                    case "end":
                        return _context4.stop();
                }
            }
        }, null, _this, [[0, 8]]);
    };

    var getTipoUsuario = exports.getTipoUsuario = function getTipoUsuario() {
        var tipoUsuario;
        return regeneratorRuntime.async(function getTipoUsuario$(_context5) {
            while (1) {
                switch (_context5.prev = _context5.next) {
                    case 0:
                        _context5.prev = 0;
                        _context5.next = 3;
                        return regeneratorRuntime.awrap(_reactNative.AsyncStorage.getItem(TIPO_USUARIO));

                    case 3:
                        tipoUsuario = _context5.sent;
                        return _context5.abrupt("return", tipoUsuario);

                    case 7:
                        _context5.prev = 7;
                        _context5.t0 = _context5["catch"](0);
                        console.log("Get tipo user | Something went wrong");

                    case 10:
                    case "end":
                        return _context5.stop();
                }
            }
        }, null, _this, [[0, 7]]);
    };
});