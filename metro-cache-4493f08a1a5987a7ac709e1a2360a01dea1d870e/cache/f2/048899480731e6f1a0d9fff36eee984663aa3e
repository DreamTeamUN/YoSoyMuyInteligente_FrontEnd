__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _class,
      _temp,
      _jsxFileName = "/home/alejosebasp/Documentos/YoSoyMuyInteligente_FrontEnd/src/components/ForumScreen.js";

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _nativeBase = _require(_dependencyMap[3], "native-base");

  var _CreatePost = _require(_dependencyMap[4], "../utils/CreatePost");

  var _styles = _require(_dependencyMap[5], "../styles");

  var _styles2 = _interopRequireDefault(_styles);

  var _const = _require(_dependencyMap[6], "../config/const");

  var _reactNativeComments = _require(_dependencyMap[7], "react-native-comments");

  var _reactNativeComments2 = _interopRequireDefault(_reactNativeComments);

  var _ExampleActions = _require(_dependencyMap[8], "../utils/ExampleActions");

  var commentActions = _interopRequireWildcard(_ExampleActions);

  var _moment = _require(_dependencyMap[9], "moment");

  var _moment2 = _interopRequireDefault(_moment);

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    ForumScreen: {
      displayName: "ForumScreen"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/alejosebasp/Documentos/YoSoyMuyInteligente_FrontEnd/src/components/ForumScreen.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var ForumScreen = _wrapComponent("ForumScreen")((_temp = _class = function (_Component) {
    _inherits(ForumScreen, _Component);

    function ForumScreen(props) {
      _classCallCheck(this, ForumScreen);

      var _this = _possibleConstructorReturn(this, (ForumScreen.__proto__ || Object.getPrototypeOf(ForumScreen)).call(this, props));

      _this.props = props;
      _this.actions = commentActions;
      _this.state = {
        titulo: '',
        texto: '',
        usuario: '',
        data: []
      };
      return _this;
    }

    _createClass(ForumScreen, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var c;
        return regeneratorRuntime.async(function componentWillMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                c = this.actions.getComments();
                _context.t0 = this;
                _context.t1 = new Date().getTime();
                _context.next = 5;
                return regeneratorRuntime.awrap((0, _CreatePost.getForTITLE)());

              case 5:
                _context.t2 = _context.sent;
                _context.next = 8;
                return regeneratorRuntime.awrap((0, _CreatePost.getForTEXT)());

              case 8:
                _context.t3 = _context.sent;
                _context.next = 11;
                return regeneratorRuntime.awrap((0, _CreatePost.getForUSER)());

              case 11:
                _context.t4 = _context.sent;
                _context.next = 14;
                return regeneratorRuntime.awrap((0, _CreatePost.getcomments)());

              case 14:
                _context.t5 = _context.sent;
                _context.t6 = {
                  loadingComments: false,
                  lastCommentUpdate: _context.t1,
                  titulo: _context.t2,
                  texto: _context.t3,
                  usuario: _context.t4,
                  data: _context.t5
                };

                _context.t0.setState.call(_context.t0, _context.t6);

              case 17:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react3.default.createElement(
          _reactNative.ScrollView,
          {
            style: _styles2.default.container,
            keyboardShouldPersistTaps: "always",
            onScroll: function onScroll(event) {
              _this2.scrollIndex = event.nativeEvent.contentOffset.y;
            },
            ref: "scrollView",
            __source: {
              fileName: _jsxFileName,
              lineNumber: 53
            }
          },
          _react3.default.createElement(
            _nativeBase.Card,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 61
              }
            },
            _react3.default.createElement(
              _nativeBase.CardItem,
              {
                header: true,
                bordered: true,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 62
                }
              },
              _react3.default.createElement(
                _nativeBase.Text,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 63
                  }
                },
                this.state.titulo
              )
            ),
            _react3.default.createElement(
              _nativeBase.CardItem,
              {
                bordered: true,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 65
                }
              },
              _react3.default.createElement(
                _nativeBase.Body,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 66
                  }
                },
                _react3.default.createElement(
                  _nativeBase.Text,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 67
                    }
                  },
                  this.state.texto
                )
              )
            ),
            _react3.default.createElement(
              _nativeBase.CardItem,
              {
                footer: true,
                bordered: true,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 72
                }
              },
              _react3.default.createElement(
                _nativeBase.Text,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 73
                  }
                },
                this.state.usuario
              )
            )
          ),
          _react3.default.createElement(_reactNative.FlatList, {
            style: _styles2.default.rootf,
            data: this.state.data,
            extraData: this.state,
            ItemSeparatorComponent: function ItemSeparatorComponent() {
              return _react3.default.createElement(_reactNative.View, {
                style: _styles2.default.separatorf,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 82
                }
              });
            },
            keyExtractor: function keyExtractor(item) {
              return item.id;
            },
            renderItem: function renderItem(item) {
              var Notification = item.item;
              return _react3.default.createElement(
                _reactNative.View,
                {
                  style: _styles2.default.containerf,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 91
                  }
                },
                _react3.default.createElement(
                  _reactNative.TouchableOpacity,
                  {
                    onPress: function onPress() {},
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 92
                    }
                  },
                  _react3.default.createElement(_reactNative.Image, {
                    style: _styles2.default.imagef,
                    source: {
                      uri: "" + _const.API + Notification.usuario.archivo.ruta.url
                    },
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 93
                    }
                  })
                ),
                _react3.default.createElement(
                  _reactNative.View,
                  {
                    style: _styles2.default.contentf,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 95
                    }
                  },
                  _react3.default.createElement(
                    _reactNative.View,
                    {
                      style: _styles2.default.contentHeaderf,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 96
                      }
                    },
                    _react3.default.createElement(
                      _nativeBase.Text,
                      {
                        style: _styles2.default.namef,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 97
                        }
                      },
                      Notification.usuario.user
                    ),
                    _react3.default.createElement(
                      _nativeBase.Text,
                      {
                        style: _styles2.default.timef,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 98
                        }
                      },
                      "9:58 am"
                    )
                  ),
                  _react3.default.createElement(
                    _nativeBase.Text,
                    {
                      rkType: "primary3 mediumLine",
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 102
                      }
                    },
                    Notification.texto
                  )
                )
              );
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 76
            }
          })
        );
      }
    }]);

    return ForumScreen;
  }(_react2.Component), _class.navigatorStyle = {}, _temp));

  exports.default = ForumScreen;
});